###############################
### |ДЗ 10.06.2023 СЕМИНАР| ###
###############################
# ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ:


#####################################################
"""
Задача 34: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не
в порядке
Ввод: 
пара-ра-рам рам-пам-папам па-ра-па-дам
Вывод:
Парам пам-пам
"""

# # Функция, которая считает число гласных букв в слове
# def count_vowels(word):
#     vowels = 'уеыаоэяию' # список гласных букв
#     return len([letter for letter in word if letter in vowels])

# def check_rhythm(poem):
# # Функция, которая проверяет ритм стихотворения
#     words_in_lines = [line.split('-') for line in poem.split()] # разбиваем стихотворение на строки и слова
#     syllables_in_lines = [[count_vowels(word) for word in line] for line in words_in_lines] # считаем число слогов в каждом слове
#     num_syllables = [sum(line) for line in syllables_in_lines] # суммируем число слогов в каждой строке
#     return len(set(num_syllables)) == 1 # проверяем, все ли строки имеют одинаковое число слогов

# poem = input("Напишите песенку Винни-Пуха: ") # считываем стихотворение с клавиатуры
# if check_rhythm(poem):
#     print('Парам пам-пам')
# else:
#     print('Пам парам')

#####################################################

#####################################################
"""
Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
ровно два аргумента, как, например, у операции умножения.
Ввод:
print_operation_table(lambda x, y: x * y) 1 2 3 4 5 6
Вывод:
 2 4 6 8 10 12
 3 6 9 12 15 18
 4 8 12 16 20 24
 5 10 15 20 25 30
 6 12 18 24 30 36
"""

# def print_operation_table(operation, num_rows=6, num_columns=6):
#   for i in range(1, num_rows+1):
#       for j in range(1, num_columns+1):
#         print(operation(i,j), end=' ')
#       print()

# print_operation_table(lambda x, y: x * y) 

#####################################################

#####################################################
"""
Задача №51. Напишите функцию same_by(characteristic, objects), которая
проверяет, все ли объекты имеют одинаковое значение
некоторой характеристики, и возвращают True, если это так.
Если значение характеристики для разных объектов
отличается - то False. Для пустого набора объектов, функция
должна возвращать True. Аргумент characteristic - это
функция, которая принимает объект и вычисляет его
характеристику.
Ввод: Вывод:
values = [0, 2, 10, 6] same
if same_by(lambda x: x % 2, values):
print(‘same’)
else:
print(‘different’)
"""

# # Функция, которая проверяет, все ли объекты имеют одинаковую характеристику
# def same_by(characteristic, objects):
#     values = [characteristic(obj) for obj in objects] # список характеристик объектов
#     # print(values)
#     return len(set(values)) <= 1 # если все значения характеристик одинаковые, то вернуть True, иначе False

# values = [0, 2, 10, 6]
# if same_by(lambda x: x % 2, values):
#     print('same')
# else:
#     print('different')

#####################################################